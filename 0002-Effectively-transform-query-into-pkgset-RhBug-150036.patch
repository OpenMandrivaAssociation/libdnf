From 62d8b4ea0e3ae8ebfa3a67867acb4d64790ae301 Mon Sep 17 00:00:00 2001
From: Jaroslav Mracek <jmracek@redhat.com>
Date: Mon, 16 Oct 2017 14:53:14 +0200
Subject: [PATCH 2/4] Effectively transform query into pkgset (RhBug:1500361)

It should provide performance boost for handling with excludes or includes.

https://bugzilla.redhat.com/show_bug.cgi?id=1500361

Closes: #346
Approved by: ignatenkobrain
---
 python/hawkey/iutil-py.c | 12 +++++++++++-
 python/hawkey/sack-py.c  | 24 ++++++++++++------------
 2 files changed, 23 insertions(+), 13 deletions(-)

diff --git a/python/hawkey/iutil-py.c b/python/hawkey/iutil-py.c
index 4281a4a..343aafd 100644
--- a/python/hawkey/iutil-py.c
+++ b/python/hawkey/iutil-py.c
@@ -25,6 +25,7 @@
 #include "dnf-advisoryref.h"
 #include "hy-package-private.h"
 #include "hy-packageset-private.h"
+#include "hy-query.h"
 #include "dnf-reldep-private.h"
 #include "dnf-reldep-list-private.h"
 #include "hy-iutil.h"
@@ -33,6 +34,7 @@
 #include "advisoryref-py.h"
 #include "iutil-py.h"
 #include "package-py.h"
+#include "query-py.h"
 #include "reldep-py.h"
 #include "sack-py.h"
 #include "pycomp.h"
@@ -186,10 +188,18 @@ packageset_to_pylist(DnfPackageSet *pset, PyObject *sack)
 DnfPackageSet *
 pyseq_to_packageset(PyObject *obj, DnfSack *sack)
 {
+    DnfPackageSet *pset;
+
+    if (queryObject_Check(obj)) {
+        HyQuery target = queryFromPyObject(obj);
+        pset = hy_query_run_set(target);
+        return pset;
+    }
+
     PyObject *sequence = PySequence_Fast(obj, "Expected a sequence.");
     if (sequence == NULL)
         return NULL;
-    DnfPackageSet *pset = dnf_packageset_new(sack);
+    pset = dnf_packageset_new(sack);
 
     const unsigned count = PySequence_Size(sequence);
     for (unsigned int i = 0; i < count; ++i) {
diff --git a/python/hawkey/sack-py.c b/python/hawkey/sack-py.c
index 4b61d4d..5065331 100644
--- a/python/hawkey/sack-py.c
+++ b/python/hawkey/sack-py.c
@@ -425,10 +425,10 @@ add_cmdline_package(_SackObject *self, PyObject *fn_obj)
 }
 
 static PyObject *
-add_excludes(_SackObject *self, PyObject *seq)
+add_excludes(_SackObject *self, PyObject *o)
 {
     DnfSack *sack = self->sack;
-    DnfPackageSet *pset = pyseq_to_packageset(seq, sack);
+    DnfPackageSet *pset = pyseq_to_packageset(o, sack);
     if (pset == NULL)
         return NULL;
     dnf_sack_add_excludes(sack, pset);
@@ -437,10 +437,10 @@ add_excludes(_SackObject *self, PyObject *seq)
 }
 
 static PyObject *
-add_includes(_SackObject *self, PyObject *seq)
+add_includes(_SackObject *self, PyObject *o)
 {
     DnfSack *sack = self->sack;
-    DnfPackageSet *pset = pyseq_to_packageset(seq, sack);
+    DnfPackageSet *pset = pyseq_to_packageset(o, sack);
     if (pset == NULL)
         return NULL;
     dnf_sack_add_includes(sack, pset);
@@ -449,10 +449,10 @@ add_includes(_SackObject *self, PyObject *seq)
 }
 
 static PyObject *
-remove_excludes(_SackObject *self, PyObject *seq)
+remove_excludes(_SackObject *self, PyObject *o)
 {
     DnfSack *sack = self->sack;
-    DnfPackageSet *pset = pyseq_to_packageset(seq, sack);
+    DnfPackageSet *pset = pyseq_to_packageset(o, sack);
     if (pset == NULL)
         return NULL;
     dnf_sack_remove_excludes(sack, pset);
@@ -461,10 +461,10 @@ remove_excludes(_SackObject *self, PyObject *seq)
 }
 
 static PyObject *
-remove_includes(_SackObject *self, PyObject *seq)
+remove_includes(_SackObject *self, PyObject *o)
 {
     DnfSack *sack = self->sack;
-    DnfPackageSet *pset = pyseq_to_packageset(seq, sack);
+    DnfPackageSet *pset = pyseq_to_packageset(o, sack);
     if (pset == NULL)
         return NULL;
     dnf_sack_remove_includes(sack, pset);
@@ -473,10 +473,10 @@ remove_includes(_SackObject *self, PyObject *seq)
 }
 
 static PyObject *
-set_excludes(_SackObject *self, PyObject *seq)
+set_excludes(_SackObject *self, PyObject *o)
 {
     DnfSack *sack = self->sack;
-    DnfPackageSet *pset = pyseq_to_packageset(seq, sack);
+    DnfPackageSet *pset = pyseq_to_packageset(o, sack);
     if (pset == NULL)
         return NULL;
     dnf_sack_set_excludes(sack, pset);
@@ -485,10 +485,10 @@ set_excludes(_SackObject *self, PyObject *seq)
 }
 
 static PyObject *
-set_includes(_SackObject *self, PyObject *seq)
+set_includes(_SackObject *self, PyObject *o)
 {
     DnfSack *sack = self->sack;
-    DnfPackageSet *pset = pyseq_to_packageset(seq, sack);
+    DnfPackageSet *pset = pyseq_to_packageset(o, sack);
     if (pset == NULL)
         return NULL;
     dnf_sack_set_includes(sack, pset);
-- 
2.13.5

